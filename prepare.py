INSTRUCTION_SET_FILE = "x86_instruction_list.txt"
TRAIN_FILES_PATH = "train/"
DATASET_FILE = "360_data_set.txt"

def load_instruction_set(ins_set_file):
	ins_set = []
	f = file(ins_set_file)
	for ins in f:
		instruction = ins[0:-1]
		if ins == "retn":
			ins_set.append(" " + instruction)
			ins_set.append(" " + instruction + " ")
		else:
			ins_set.append(" " + instruction + " ")
	return ins_set
	
def prepare_asm_corpus(asm_file, ins_set_list):
	corpus = ""
	
	f = file(asm_file)
	print asm_file
	
	for line in f:
		if '.text' in line and ';' not in line:
			for ins in ins_set_list:
				if ins in line:
					corpus += ins[:-1]

	return corpus
				
def read_data_set(dataset_file):
	f = file(dataset_file)
	return f.readlines()


ins_set_list = load_instruction_set(INSTRUCTION_SET_FILE)
data_set = read_data_set(DATASET_FILE)

fw = file("corpus_with_label.txt", 'w')
fw.write("kategori|asm_codes" + "\n")

for sample in data_set:
	s = sample[:-1].split(",")
	file_name = s[0][1:-1] + ".asm"
	corpus = prepare_asm_corpus(TRAIN_FILES_PATH + file_name, ins_set_list) + "\n"
	#fw.write(file_name + "," + s[1] + "," + corpus[1:])
	fw.write(s[1] + "|" + corpus[1:])
fw.close()